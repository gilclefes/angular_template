{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport let ProductComponent = /*#__PURE__*/(() => {\n  class ProductComponent {\n    constructor(fb) {\n      this.fb = fb;\n      this.userForm = this.fb.group({\n        name: ['', Validators.compose([Validators.required])],\n        category: ['', Validators.compose([Validators.required])],\n        decription: ['', Validators.compose([Validators.required])],\n        status: ['', Validators.compose([Validators.required])]\n      });\n    }\n\n    ngOnInit() {}\n\n  }\n\n  ProductComponent.ɵfac = function ProductComponent_Factory(t) {\n    return new (t || ProductComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n\n  ProductComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProductComponent,\n    selectors: [[\"app-product\"]],\n    decls: 36,\n    vars: 2,\n    consts: [[1, \"form-horizontal\", 3, \"formGroup\"], [1, \"mb-0\"], [\"for\", \"first-name\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"name\", \"required\", \"\", 1, \"form-control\"], [1, \"form-group\"], [\"for\", \"last-name\", 1, \"form-label\"], [\"aria-label\", \"Default select example\", \"formControlName\", \"category\", 1, \"form-control\"], [\"selected\", \"\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"value\", \"3\"], [\"type\", \"text\", \"formControlName\", \"description\", 1, \"form-control\"], [1, \"checkbox\"], [1, \"form-label\", \"checkbox-inline\"], [\"type\", \"checkbox\", \"value\", \"\", 1, \"form-control\"], [\"cclass\", \"form-group\"], [\"type\", \"checkbox\", \"formControlName\", \"status\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 3, \"disabled\"]],\n    template: function ProductComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Product Details\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"hr\");\n        i0.ɵɵelementStart(4, \"div\", 1)(5, \"label\", 2);\n        i0.ɵɵtext(6, \"Name: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 4)(9, \"label\", 5);\n        i0.ɵɵtext(10, \"Category: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"select\", 6)(12, \"option\", 7);\n        i0.ɵɵtext(13, \"Open this select menu\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"option\", 8);\n        i0.ɵɵtext(15, \"One\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"option\", 9);\n        i0.ɵɵtext(17, \"Two\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"option\", 10);\n        i0.ɵɵtext(19, \"Three\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"div\", 1)(21, \"label\", 5);\n        i0.ɵɵtext(22, \"Decription: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"textarea\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 12)(25, \"label\", 13);\n        i0.ɵɵtext(26, \"Option 1 \");\n        i0.ɵɵelement(27, \"input\", 14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 15)(29, \"label\", 2);\n        i0.ɵɵtext(30, \"Status: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"p\");\n        i0.ɵɵtext(33, \"Complete the form to enable button.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"button\", 17);\n        i0.ɵɵtext(35, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n        i0.ɵɵadvance(34);\n        i0.ɵɵproperty(\"disabled\", !ctx.userForm.valid);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i1.SelectControlValueAccessor, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.CheckboxControlValueAccessor, i1.CheckboxRequiredValidator],\n    styles: [\"\"]\n  });\n  return ProductComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}